# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- staging

variables:
  netCoreSdkVersion: '3.1.100'
  buildConfiguration: 'Release'
  productVersion: '7.0.0-preview1'

jobs:
- job: macOS
  pool:
    vmImage: 'macOS-10.15'
  steps:
  - task: DotNetCoreInstaller@0
    inputs:
      packageType: 'sdk'
      version: $(netCoreSdkVersion)
  - script: dotnet build ./sscms.sln --configuration $(buildConfiguration)
    displayName: 'dotnet build'

- job: Linux
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: DotNetCoreInstaller@0
    inputs:
      packageType: 'sdk'
      version: $(netCoreSdkVersion)
  - script: dotnet build --configuration $(buildConfiguration)
    displayName: 'dotnet build $(buildConfiguration)'

- job: Windows
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: DotNetCoreInstaller@0
    inputs:
      packageType: 'sdk'
      version: $(netCoreSdkVersion)
  - script: dotnet build ./sscms.sln --configuration $(buildConfiguration)
    displayName: 'dotnet build'
  - script: dotnet publish ./src/SS.CMS.Web/SS.CMS.Web.csproj -r win-x64 --configuration $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/sscms-$(productVersion)-win-x64
    displayName: 'dotnet publish win-x64'
  - script: dotnet publish ./src/SS.CMS.Web/SS.CMS.Web.csproj -r win-x86 --configuration $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/sscms-$(productVersion)-win-x86
    displayName: 'dotnet publish win-x86'
  - script: dotnet publish ./src/SS.CMS.Web/SS.CMS.Web.csproj -r linux-x64 --configuration $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/sscms-$(productVersion)-linux-x64
    displayName: 'dotnet publish linux-x64'
  - script: dotnet publish ./src/SS.CMS.Web/SS.CMS.Web.csproj -r osx-x64 --configuration $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/sscms-$(productVersion)-osx-x64
    displayName: 'dotnet publish osx-x64'
  
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/sscms-$(productVersion)-win-x64' 
      archiveType: 'zip'
      includeRootFolder: false
      archiveFile: '$(Build.ArtifactStagingDirectory)/publish/sscms-$(productVersion)-win-x64.zip' 

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/sscms-$(productVersion)-win-x86' 
      archiveType: 'zip'
      includeRootFolder: false
      archiveFile: '$(Build.ArtifactStagingDirectory)/publish/sscms-$(productVersion)-win-x86.zip' 

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/sscms-$(productVersion)-linux-x64' 
      archiveType: 'zip'
      includeRootFolder: false
      archiveFile: '$(Build.ArtifactStagingDirectory)/publish/sscms-$(productVersion)-linux-x64.zip' 

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/sscms-$(productVersion)-osx-x64' 
      archiveType: 'zip'
      includeRootFolder: false
      archiveFile: '$(Build.ArtifactStagingDirectory)/publish/sscms-$(productVersion)-osx-x64.zip' 

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)/publish' 
      artifactName: 'sscms-$(productVersion)'